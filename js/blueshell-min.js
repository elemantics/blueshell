/*!
 * Name: blueshell.js
 * Author: John Newman
 * Date: 7-18-12
 * Version: 2.1
 * License: MIT
 * URL: https://github.com/jgnewman/blueshell
 * Description: A JS microlibrary for inheritance.  Geared more toward seamless integration with prototypes. Even works in IE.
 */
(function(global){"use strict";var module=module||null,idIncrementor=999999,exports={},protoRefs={};function idgen(){var newStr="",chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz",i;newStr+=(new Date).getTime();idIncrementor+=1;newStr+="-"+idIncrementor+"-";if(idIncrementor===9999999){idIncrementor=999999}for(i=0;i<25;i+=1){newStr+=chars[Math.floor(Math.random()*chars.length)]}return newStr}function construct(scope,obj){var i;for(i in obj){if(Object.prototype.hasOwnProperty.call(obj,i)){scope[i]=obj[i]}}return scope}function Class(parent,child,copyProto){var Inherit={},newId=idgen(),middleChild,middleBinding;Inherit.ClassChain=function(parent,child){construct(this,parent);if(child){return construct(this,child)}return this};if(parent.getProto&&parent.getProto()!==Object.prototype&&parent.isClassChain&&!Object.prototype.hasOwnProperty.call(parent,"isClassChain")&&copyProto!==false){Inherit.ChainLink=function(newSpec){construct(this,newSpec)};middleChild={protoRef:idgen()};protoRefs[middleChild.protoRef]=parent.getProto();Inherit.ChainLink.prototype=parent.getProto();middleBinding=new Inherit.ChainLink(middleChild);Inherit.ClassChain.prototype=middleBinding;return new Inherit.ClassChain(parent,child)}Inherit.ClassChain.prototype={isClassChain:true,protoRef:newId,getProto:function(){var proto=protoRefs[this.protoRef];return!proto?Object.prototype:proto},create:function(mixins,copyPrototype){return new Class(this,mixins,copyPrototype)}};return new Inherit.ClassChain(parent,child)}function Proto(proto,child){var Inherit={},middleChild,middleBinding;Inherit.ClassChain=function(newSpec){construct(this,newSpec)};if(proto.isClassChain&&!Object.prototype.hasOwnProperty.call(proto,"isClassChain")){Inherit.ChainLink=function(newSpec){construct(this,newSpec)};middleChild={protoRef:idgen()};protoRefs[middleChild.protoRef]=proto;Inherit.ChainLink.prototype=proto;middleBinding=new Inherit.ChainLink(middleChild);Inherit.ClassChain.prototype=middleBinding;return new Inherit.ClassChain(child)}protoRefs[child.protoRef]=proto;Inherit.ClassChain.prototype=proto;return new Inherit.ClassChain(child)}exports={bindProto:function(proto,child){return new Proto(proto,child)},create:function(parent,child,copyProto){return new Class(parent,child,copyProto)}};if(global.define&&typeof global.define===fun&&global.define.amd){global.define("BlueShell",[],exports)}else if(module&&module.exports){module.exports=exports}else{global.BlueShell=global.B=exports}})(this)